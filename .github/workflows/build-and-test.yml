name: Continuous Integration Pipeline

# When action will run
on: push

jobs:
  # single job called "build and test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: book
          POSTGRES_DB: TimeTracker
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out project
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          
      # Ubuntu packages required to connect to database
      - name: Install psycopg2 prerequisites
        run: sudo apt-get install python-dev libpq-dev

      - name: Install dependencies
        run: |
          make install
      
      # Lint the python files (controlled with Makefile)
      - name: Lint with pylint
        run: |
          make lint

      # Tests for main.py function (controlled with Makefile)
      - name: Test with pytest
        env:
          API_KEY: ${{ secrets.TIMEULAR_API_KEY }}
          API_SECRET: ${{ secrets.TIMEULAR_API_SECRET }}
        run: |
          make test
          
      ## Django specific steps ##
      # Make django migrations
      - name: Run django migrations
        run: python DjangoWebApp/manage.py migrate
      
      # Run django tests
      - name: Run django tests
        run: python manage.py test

      # Logs the completed build-and-test
      - name: Log successful build
        run: echo Build completed on `date`
